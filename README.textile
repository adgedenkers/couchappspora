h1. CouchAppspora

h3. ..is Diaspora implemented on CouchDB

p. The Diaspora source code was initially "released":http://www.joindiaspora.com/2010/09/15/developer-release.html on September 15th, 2010. This project is an implementation of the Diaspora protocol as a CouchApp built entirely on CouchDB.

h3. Why?

p. CouchDB is a good fit for a federated social web node due to it's robust replication and MVCC implementations. Diaspora is an attractive implementation of a federated social web application. I want to marry the front end and features of Diaspora, but build them on the flexible replication of CouchDB. The resulting application is written in pure Javascript and HTML and only requires CouchDB in order to run.

h3. Protocols and examples

p. I am shooting for Social Web Acid Test level 0 (SWAT0) compliance by implementing the OStatus stack. Since Couch can use CommonJS, I started a project called "ostatus-js":http://github.com/maxogden/ostatus-js to write the OStatus protocols in server side javascript. If you want to help build these protocols, please check out that project.

p. Once the OStatus protocols are in place, you will be able to set up your own 'seed'/'node' on any CouchDB, or use someone elses. Your data will live on this node. If you 'follow' someone, CouchDB will start replicating all posts from that person's node to your local node. You will be able to choose much of your followers data and how long their data stays around on your local node, but you will always want to keep all of your own personally created posts around for others to replicate from.

p. If you join a 'group'/'aspect', you will effectively now be replicating directly from all group posts from all users in that group. Groups will be able to be public or private. 

p. Once this framework is set up, CouchDB gets really exciting. You can have your main node acting as the public host/server for others to replicate your data from, but on your devices you can replicate local subsets of the data. On your phone you could only replicate posts from one of your aspects instead of all of them, or choose to not replicate attachcments, or any other filters that you can imagine. The benefit of replicating directly to your devices is that it will allow you to work while offline, and CouchDB will automatically handle replicating your data the moment a connection becomes available.

p. !http://i.imgur.com/J0HPe.png!

h3. Hosting your own

p. To demonstrate the built in replication that you get with CouchDB (I haven't implemented any federated web protocols quite yet):

* Go to "couchone.com/get":http://couchone.com/get and sign up for a Couch
* Make a database and set up bidirectional continuous replication from @http://glitterbacon.couchone.com/couchappspora@ to your new database
* Visit "http://yourcouch/yourdb/_design/couchappspora/index.html":http://yourcouch/yourdb/_design/couchappspora/index.html

p. For more advanced features (protocols like Webfinger for user discovery) you will have to use a dedicated domain name and configure your CouchDB to use a @vhost@ entry for your domain name. TODO docs for this.

h3. TO-DO (aka 'how to contribute')

p. You can either help build out the HTML/CSS/JS interface or you can help out with the "backend protocols":http://github.com/maxogden/ostatus-js.

p. Check out the "Issues page":http://github.com/maxogden/couchappspora/issues

p. If you've never worked with CouchApps before, I'd highly recommend learning more about them at "couchapp.org":http://couchapp.org/

h3. License

p. TODO: I think I have to comply with Diaspora's AGPLV3 License...